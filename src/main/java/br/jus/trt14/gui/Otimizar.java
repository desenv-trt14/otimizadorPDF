/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.jus.trt14.gui;

import br.jus.trt14.converter.Converter;
import br.jus.trt14.converter.NiveisCompactacao;
import br.jus.trt14.converter.doc.ConverterFileToPDF;
import br.jus.trt14.events.DragableTextField;
import br.jus.trt14.gui.dialogs.Configuracao;
import br.jus.trt14.gui.dialogs.Duvidas;
import br.jus.trt14.gui.dialogs.ProcessandoArquivo;
import br.jus.trt14.gui.dialogs.TelaOCR;
import br.jus.trt14.job.ThreadConverter;
import br.jus.trt14.model.DefaultOptionPane;
import br.jus.trt14.model.OptionPane;
import br.jus.trt14.status.Interframes;
import br.jus.trt14.tools.Preferences;
import br.jus.trt14.tools.Utils;
import java.awt.FileDialog;
import java.io.File;
import java.util.concurrent.Callable;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import javax.swing.JCheckBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author 
 */
public class Otimizar extends FrameBasico {

    private ExecutorService executor;
    private Integer numberOfPages;
    public String textoTooltipNivelCompactacao;
    public static String sufixo = "";
    public static boolean assinarDigitalmente = false;
    public JFileChooser fc = new JFileChooser();
    public static OptionPane optionPane = new DefaultOptionPane();

    /**
     * Creates new form Principal
     */
    public Otimizar() {
        initComponents();
        this.position();
        executor = Executors.newFixedThreadPool(1);

        jCBdoOCR.setSelected(Preferences.isDocumentoPesquisavel());
        jSNivelCompactacao.setVisible(false);
        jLNivelCompactacao.setVisible(false);
        jLTamanhoArquivo.setVisible(false);
        jTFTamanhoArquivo1.setVisible(false);
        jBCancelar.setVisible(false);
        textoTooltipNivelCompactacao = jLAjudaCompactacao.getToolTipText();
        jLAjudaCompactacao.setToolTipText(String.format(textoTooltipNivelCompactacao, NiveisCompactacao.EXTREMA, NiveisCompactacao.BOA, NiveisCompactacao.RAZOAVEL, NiveisCompactacao.MINIMA));
        final JTextField field = jTFEntradaPath;
        final Otimizar o = this;
        DragableTextField dragableTextField = new DragableTextField(field, false, new Callable<Void>() {
            @Override
            public Void call() throws Exception {
                o.setFile(new File(field.getText()));
                return null;
            }
        });

        jTFEntradaPath.setDropTarget(dragableTextField);
        jPEntrada.setDropTarget(dragableTextField);
        Interframes.MANTER_CORES = false;

        setPreferencias();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jLSuperior = new javax.swing.JLabel();
        jPEntrada = new javax.swing.JPanel();
        jLEInforme = new javax.swing.JLabel();
        jTFEntradaPath = new javax.swing.JTextField();
        jBAbrirDocumentoPDFEntrada = new javax.swing.JButton();
        jPSaida = new javax.swing.JPanel();
        jTFSaidaPath = new javax.swing.JTextField();
        jLSaidaInforme = new javax.swing.JLabel();
        jBLocalArmazenamentoArquivoSaida = new javax.swing.JButton();
        jPOpcoes = new javax.swing.JPanel();
        jLOpcoesNivel = new javax.swing.JLabel();
        jCBCompactacao = new javax.swing.JComboBox();
        jLOpcoesFinalidade = new javax.swing.JLabel();
        jCBFinalidade = new javax.swing.JComboBox();
        jLAjudaCompactacao = new javax.swing.JLabel();
        jLAjudaConversao = new javax.swing.JLabel();
        jSNivelCompactacao = new javax.swing.JSlider();
        jLNivelCompactacao = new javax.swing.JLabel();
        jLTamanhoArquivo = new javax.swing.JLabel();
        jLOpcoesFinalidade1 = new javax.swing.JLabel();
        jTFTamanhoArquivo1 = new javax.swing.JTextField();
        jTFUltimaPagina = new javax.swing.JTextField();
        jLOpcoesFinalidade2 = new javax.swing.JLabel();
        jTFPrimeiraPagina = new javax.swing.JTextField();
        jCBdoOCR = new javax.swing.JCheckBox();
        jCBAssinarDigitalmente = new javax.swing.JCheckBox();
        jBConverter = new javax.swing.JButton();
        jPBProgresso = new javax.swing.JProgressBar();
        jLabel2 = new javax.swing.JLabel();
        jTempoEstimado = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jBCancelar = new javax.swing.JButton();
        jLStatus = new javax.swing.JLabel();
        jLDuvidas = new javax.swing.JLabel();

        jScrollPane1.setViewportView(jEditorPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("JT - Otimizar PDF");
        setResizable(false);

        jLSuperior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/trt14_logo_small.png"))); // NOI18N
        jLSuperior.setAlignmentX(0.5F);

        jPEntrada.setBorder(javax.swing.BorderFactory.createTitledBorder("Entrada"));

        jLEInforme.setText("Informe o arquivo que você deseja converter.");

        jTFEntradaPath.setEditable(false);
        jTFEntradaPath.setToolTipText("Você pode arrastar e soltar um PDF aqui");

        jBAbrirDocumentoPDFEntrada.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/gnome_folder_open_16.png"))); // NOI18N
        jBAbrirDocumentoPDFEntrada.setText("Abrir");
        jBAbrirDocumentoPDFEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAbrirDocumentoPDFEntradaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPEntradaLayout = new javax.swing.GroupLayout(jPEntrada);
        jPEntrada.setLayout(jPEntradaLayout);
        jPEntradaLayout.setHorizontalGroup(
            jPEntradaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPEntradaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPEntradaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPEntradaLayout.createSequentialGroup()
                        .addComponent(jLEInforme, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(67, 67, 67))
                    .addGroup(jPEntradaLayout.createSequentialGroup()
                        .addComponent(jTFEntradaPath)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBAbrirDocumentoPDFEntrada)
                        .addContainerGap())))
        );
        jPEntradaLayout.setVerticalGroup(
            jPEntradaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPEntradaLayout.createSequentialGroup()
                .addComponent(jLEInforme)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPEntradaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFEntradaPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBAbrirDocumentoPDFEntrada))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPSaida.setBorder(javax.swing.BorderFactory.createTitledBorder("Saída"));

        jTFSaidaPath.setEditable(false);

        jLSaidaInforme.setText("Informe o local onde deseja salvar o(s) arquivo(s) convertido(s).");

        jBLocalArmazenamentoArquivoSaida.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/gnome_folder_open_16.png"))); // NOI18N
        jBLocalArmazenamentoArquivoSaida.setText("Abrir");
        jBLocalArmazenamentoArquivoSaida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLocalArmazenamentoArquivoSaidaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPSaidaLayout = new javax.swing.GroupLayout(jPSaida);
        jPSaida.setLayout(jPSaidaLayout);
        jPSaidaLayout.setHorizontalGroup(
            jPSaidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPSaidaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPSaidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLSaidaInforme, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTFSaidaPath))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBLocalArmazenamentoArquivoSaida)
                .addContainerGap())
        );
        jPSaidaLayout.setVerticalGroup(
            jPSaidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPSaidaLayout.createSequentialGroup()
                .addComponent(jLSaidaInforme)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPSaidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFSaidaPath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBLocalArmazenamentoArquivoSaida))
                .addGap(0, 10, Short.MAX_VALUE))
        );

        jPOpcoes.setBorder(javax.swing.BorderFactory.createTitledBorder("Opções"));

        jLOpcoesNivel.setText("Nível de Compactação:");

        jCBCompactacao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Extrema", "Boa", "Razoável", "Mínima", "Personalizada" }));
        jCBCompactacao.setSelectedIndex(3);
        jCBCompactacao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBCompactacaoActionPerformed(evt);
            }
        });

        jLOpcoesFinalidade.setText("Finalidade da Conversão:");

        jCBFinalidade.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "PJE", "Proad", "Outros", "Não Dividir" }));
        jCBFinalidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBFinalidadeActionPerformed(evt);
            }
        });

        jLAjudaCompactacao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/gnome_dialog_question_20.png"))); // NOI18N
        jLAjudaCompactacao.setToolTipText("<html>\n<b>Defina o nível aplicado de compactação </b><br/>\n - Extrema: %sdpi - Maior compactação, pior qualidade. <br/>\n - Boa: %sdpi <br/>\n - Razoável: %sdpi <br/>\n - Mínima: %sdpi - Menor compactação, melhor qualidade. <br/>\nNão existe um padrão, varia de acordo com o conteúdo no arquivo. <br/>\nNão esqueça de verificar a legibilidade do arquivo gerado.\n</html>");
        jLAjudaCompactacao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLAjudaCompactacaoMouseClicked(evt);
            }
        });

        jLAjudaConversao.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/gnome_dialog_question_20.png"))); // NOI18N
        jLAjudaConversao.setToolTipText("<html>\n<b>A finalidade da conversão irá definir o tamanho dos arquivos gerados</b><br/>\n - PJE: Procura dividir os arquivos convertidos em 3 MB <br/>\n - Proad: Procura dividir os arquivos em blocos de 5 MB <br/>\n - Outros: Escolha o tamanho dos blocos a serem divididos <br/>\n - Não Dividir: Não divide os arquivos convertidos <br/>\n</html>");

        jSNivelCompactacao.setMaximum(600);
        jSNivelCompactacao.setMinimum(75);
        jSNivelCompactacao.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSNivelCompactacaoStateChanged(evt);
            }
        });

        jLNivelCompactacao.setText(" 75 dpi");

        jLTamanhoArquivo.setText("MB(s)");

        jLOpcoesFinalidade1.setText("Converter da página:");

        jTFTamanhoArquivo1.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFTamanhoArquivo1FocusLost(evt);
            }
        });

        jTFUltimaPagina.setEditable(false);
        jTFUltimaPagina.setText("1");
        jTFUltimaPagina.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFUltimaPaginaFocusLost(evt);
            }
        });

        jLOpcoesFinalidade2.setText("a");

        jTFPrimeiraPagina.setEditable(false);
        jTFPrimeiraPagina.setText("1");
        jTFPrimeiraPagina.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jTFPrimeiraPaginaFocusLost(evt);
            }
        });

        jCBdoOCR.setText("Tornar o PDF Pesquisável (OCR para documentos Escaneados)");
        jCBdoOCR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBdoOCRActionPerformed(evt);
            }
        });

        jCBAssinarDigitalmente.setText("Assinar digitalmente os documentos convertidos");
        jCBAssinarDigitalmente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCBAssinarDigitalmenteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPOpcoesLayout = new javax.swing.GroupLayout(jPOpcoes);
        jPOpcoes.setLayout(jPOpcoesLayout);
        jPOpcoesLayout.setHorizontalGroup(
            jPOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPOpcoesLayout.createSequentialGroup()
                .addGroup(jPOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPOpcoesLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(jPOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLOpcoesFinalidade)
                            .addComponent(jLOpcoesNivel))
                        .addGap(10, 10, 10)
                        .addGroup(jPOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPOpcoesLayout.createSequentialGroup()
                                .addComponent(jCBCompactacao, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLAjudaCompactacao)
                                .addGap(18, 18, 18)
                                .addComponent(jSNivelCompactacao, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLNivelCompactacao))
                            .addGroup(jPOpcoesLayout.createSequentialGroup()
                                .addComponent(jCBFinalidade, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(jLAjudaConversao)
                                .addGap(18, 18, 18)
                                .addComponent(jTFTamanhoArquivo1, javax.swing.GroupLayout.PREFERRED_SIZE, 73, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(10, 10, 10)
                                .addComponent(jLTamanhoArquivo))))
                    .addGroup(jPOpcoesLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPOpcoesLayout.createSequentialGroup()
                                    .addGap(132, 132, 132)
                                    .addComponent(jTFPrimeiraPagina, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(jLOpcoesFinalidade2, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(10, 10, 10)
                                    .addComponent(jTFUltimaPagina, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(jLOpcoesFinalidade1, javax.swing.GroupLayout.Alignment.LEADING))
                            .addComponent(jCBAssinarDigitalmente)
                            .addComponent(jCBdoOCR))))
                .addContainerGap(70, Short.MAX_VALUE))
        );
        jPOpcoesLayout.setVerticalGroup(
            jPOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPOpcoesLayout.createSequentialGroup()
                .addGroup(jPOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPOpcoesLayout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addGroup(jPOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLOpcoesNivel)
                            .addComponent(jCBCompactacao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLAjudaCompactacao)
                    .addComponent(jSNivelCompactacao, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLNivelCompactacao, javax.swing.GroupLayout.Alignment.TRAILING))
                .addGap(3, 3, 3)
                .addGroup(jPOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPOpcoesLayout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jLOpcoesFinalidade))
                    .addGroup(jPOpcoesLayout.createSequentialGroup()
                        .addGap(1, 1, 1)
                        .addComponent(jCBFinalidade, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jLAjudaConversao)
                    .addGroup(jPOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLTamanhoArquivo)
                        .addComponent(jTFTamanhoArquivo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPOpcoesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLOpcoesFinalidade1)
                    .addComponent(jTFUltimaPagina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLOpcoesFinalidade2)
                    .addComponent(jTFPrimeiraPagina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCBdoOCR)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCBAssinarDigitalmente)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jBConverter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/doc_convert.png"))); // NOI18N
        jBConverter.setText("Converter");
        jBConverter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConverterActionPerformed(evt);
            }
        });

        jPBProgresso.setStringPainted(true);
        jPBProgresso.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jPBProgressoStateChanged(evt);
            }
        });

        jLabel2.setText("Tempo Estimado:");

        jTempoEstimado.setText("  ");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("PDF");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("Otimizador");

        jBCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/button_cancel.png"))); // NOI18N
        jBCancelar.setText("Cancelar");
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });

        jLDuvidas.setBackground(new java.awt.Color(202, 202, 202));
        jLDuvidas.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLDuvidas.setForeground(new java.awt.Color(0, 51, 255));
        jLDuvidas.setText("Dúvidas?");
        jLDuvidas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLDuvidasMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLSuperior, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addGap(0, 239, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(jLDuvidas))))
                    .addComponent(jPEntrada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPBProgresso, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTempoEstimado, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBConverter))
                    .addComponent(jPOpcoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPSaida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLDuvidas)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jLSuperior, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))))
                .addGap(18, 18, 18)
                .addComponent(jPEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addComponent(jPSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPOpcoes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(jTempoEstimado)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jBCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jBConverter, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLStatus, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12)
                .addComponent(jPBProgresso, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBAbrirDocumentoPDFEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAbrirDocumentoPDFEntradaActionPerformed
        FileDialog fc = new FileDialog(this);
        fc.setMultipleMode(false);
        fc.setFile(getAllowedFiles(allowedTypesOffice, allowedTypesOthersThanOffice));
        fc.setVisible(true);

        if (fc.getFiles().length == 1) {
            File[] f = fc.getFiles();

            if (f[0].getAbsolutePath().toLowerCase().endsWith(".pdf")) {
                setFile(f[0]);
            } else {
                String convertFile = ConverterFileToPDF.convertFile(f[0].getAbsolutePath());
                if (!convertFile.isEmpty()) {
                    setFile(new File(convertFile));
                }
            }

        } else {
            jTFPrimeiraPagina.setEditable(false);
            jTFUltimaPagina.setEditable(false);
            jTFEntradaPath.setText("");
            jTFSaidaPath.setText("");
        }

    }//GEN-LAST:event_jBAbrirDocumentoPDFEntradaActionPerformed

    public void setFile(File f) {
        String caminho = f.getPath().substring(0, f.getPath().length() - 4) + "-otimizado.pdf";
        jTFEntradaPath.setText(f.getPath());
        jTFSaidaPath.setText(caminho);
        try {
            this.numberOfPages = Utils.getPageCount(jTFEntradaPath.getText());
            if (numberOfPages > 0) {
                jTFPrimeiraPagina.setEditable(true);
                jTFUltimaPagina.setEditable(true);
                /*int showConfirmDialog = optionPane.showConfirmDialog(this, "Deseja realizar a análise prévia do arquivo?", "Análise Prévia", JOptionPane.YES_NO_OPTION);
                if (showConfirmDialog == JOptionPane.YES_OPTION) {
                    defineNivelCompactacao();
                }*/

            }
            jTFUltimaPagina.setText(String.valueOf(numberOfPages));

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void defineNivelCompactacao() {
        ProcessandoArquivo processandoArquivo = new ProcessandoArquivo();
        processandoArquivo.iniciarDialog(jTFEntradaPath.getText(), this);

    }


    private void jBLocalArmazenamentoArquivoSaidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLocalArmazenamentoArquivoSaidaActionPerformed
        JFileChooser fc = new JFileChooser();
        FileFilter ff = new FileNameExtensionFilter("PDF (Portable Document Format)", "pdf");
        fc.setFileFilter(ff);
        fc.setAcceptAllFileFilterUsed(false);
        int opt = fc.showSaveDialog(this);
        File f = fc.getSelectedFile();
        if (opt == 0) {
            jTFSaidaPath.setText(f.getPath().replace(".pdf", "") + ".pdf");
        }
    }//GEN-LAST:event_jBLocalArmazenamentoArquivoSaidaActionPerformed

    private void jCBCompactacaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBCompactacaoActionPerformed
        if (jCBCompactacao.getSelectedItem().toString().equals("Personalizada")) {
            jSNivelCompactacao.setVisible(true);
            jLNivelCompactacao.setVisible(true);
        } else {
            jSNivelCompactacao.setVisible(false);
            jLNivelCompactacao.setVisible(false);
        }
    }//GEN-LAST:event_jCBCompactacaoActionPerformed

    private void jBConverterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConverterActionPerformed
        Boolean isValidoTamanhoArquivo = true;
        float tamanhoArquivo = 0;
        if (jCBFinalidade.getSelectedItem().toString().equals("Outros")) {
            try {
                tamanhoArquivo = Float.valueOf(jTFTamanhoArquivo1.getText());
                isValidoTamanhoArquivo = true;
            } catch (NumberFormatException e) {
                isValidoTamanhoArquivo = false;
            }
        }
        int primeiraPagina = 1;
        int ultimaPagina = 1;
        Boolean isQuantidadeDePaginaValida = true;
        Boolean isPrimeiraPaginaValida = true;
        Boolean isUltimaPaginaValida = true;
        Boolean primeiraPaginaMaiorQueUltima = false;
        try {
            primeiraPagina = Integer.valueOf(jTFPrimeiraPagina.getText());
            ultimaPagina = Integer.valueOf(jTFUltimaPagina.getText());
            if (primeiraPagina > ultimaPagina) {
                isQuantidadeDePaginaValida = false;
                primeiraPaginaMaiorQueUltima = true;
            }
            if (primeiraPagina <= 0 || primeiraPagina > numberOfPages) {
                isPrimeiraPaginaValida = false;
                isQuantidadeDePaginaValida = false;
            }
            if (ultimaPagina <= 0 || ultimaPagina > numberOfPages) {
                isUltimaPaginaValida = false;
                isQuantidadeDePaginaValida = false;
            }
        } catch (Exception e) {
            isQuantidadeDePaginaValida = false;
        }
        if (jTFEntradaPath.getText().isEmpty() || jTFSaidaPath.getText().isEmpty()) {
            String mensagem = jTFEntradaPath.getText().isEmpty() ? " Entrada " : " Saida ";

            optionPane.showMessageDialog(null, "Informe o arquivo de" + mensagem, "Atenção!", JOptionPane.INFORMATION_MESSAGE);
        } else if (!isValidoTamanhoArquivo) {
            optionPane.showMessageDialog(null, "Tamanho do arquivo inválido, informe um tamanho inteiro", "Atenção!", JOptionPane.INFORMATION_MESSAGE);
            jTFTamanhoArquivo1.requestFocus();
        } else if (!isQuantidadeDePaginaValida) {
            optionPane.showMessageDialog(null, "Quantidade de páginas inválida! Verifique os parametros informados", "Atenção!", JOptionPane.INFORMATION_MESSAGE);
            if (!isPrimeiraPaginaValida) {
                optionPane.showMessageDialog(null, "A primeira página não pode ser menor que 1 ou maior que " + this.numberOfPages + "!", "Atenção!", JOptionPane.INFORMATION_MESSAGE);
                jTFPrimeiraPagina.requestFocus();
            }
            if (!isUltimaPaginaValida) {
                optionPane.showMessageDialog(null, "A última página não pode ser menor que 1 ou maior que " + this.numberOfPages + "!", "Atenção!", JOptionPane.INFORMATION_MESSAGE);
                jTFUltimaPagina.requestFocus();
            }
            if (primeiraPaginaMaiorQueUltima) {
                optionPane.showMessageDialog(null, "A primeira página não pode ser maior que a última!", "Atenção!", JOptionPane.INFORMATION_MESSAGE);
                jTFUltimaPagina.requestFocus();
            }
        } else {
            String niveLCompactacao = "";
            if (jCBCompactacao.getSelectedItem().toString().equals("Personalizada")) {
                niveLCompactacao = String.valueOf(jSNivelCompactacao.getValue());
            } else {
                niveLCompactacao = NiveisCompactacao.getEnumByString((String) jCBCompactacao.getSelectedItem());
            }

            //Pega o nível de compactação desejada pelo usuário
            Integer finalidade = jCBFinalidade.getSelectedIndex();

            //Limpa todos os arquivos temporarios convertidos anteriormente
            Utils.cleanTempFolder();

            String entradaSanitizada = Utils.sanitizaEntrada(jTFEntradaPath.getText());

            //Executa o Conversor por página
            if (jCBdoOCR.isSelected()) {
                entradaSanitizada = ocrEntrada(entradaSanitizada);

            }
            if (!entradaSanitizada.isEmpty()) {
                ThreadConverter threadConverter = new ThreadConverter(
                        new Converter(entradaSanitizada,
                                jTFSaidaPath.getText(), niveLCompactacao, finalidade, tamanhoArquivo, primeiraPagina, ultimaPagina, true), jPBProgresso, jTempoEstimado, jBConverter, jBCancelar);
                executor.execute(threadConverter);
            } else {
                optionPane.showMessageDialog(null, "Cancelamento ou erro no processo do OCR!", "Atenção!", JOptionPane.INFORMATION_MESSAGE);
            }

        }

    }//GEN-LAST:event_jBConverterActionPerformed

    private String ocrEntrada(String entradaSanitizada) {
        TelaOCR telaOCR = new TelaOCR();
        telaOCR.iniciarDialog(entradaSanitizada, this);
        entradaSanitizada = telaOCR.getOutput();
        return entradaSanitizada;
    }


    private void jLAjudaCompactacaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLAjudaCompactacaoMouseClicked

    }//GEN-LAST:event_jLAjudaCompactacaoMouseClicked

    private void jSNivelCompactacaoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSNivelCompactacaoStateChanged
        jLNivelCompactacao.setText(String.valueOf(jSNivelCompactacao.getValue()) + " dpi");
    }//GEN-LAST:event_jSNivelCompactacaoStateChanged

    private void jCBFinalidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBFinalidadeActionPerformed
        if (jCBFinalidade.getSelectedItem().toString().equals("Outros")) {
            jTFTamanhoArquivo1.setVisible(true);
            jLTamanhoArquivo.setVisible(true);
        } else {
            jTFTamanhoArquivo1.setVisible(false);
            jLTamanhoArquivo.setVisible(false);
        }
    }//GEN-LAST:event_jCBFinalidadeActionPerformed

    private void jTFTamanhoArquivo1FocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFTamanhoArquivo1FocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFTamanhoArquivo1FocusLost

    private void jTFUltimaPaginaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFUltimaPaginaFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFUltimaPaginaFocusLost

    private void jTFPrimeiraPaginaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jTFPrimeiraPaginaFocusLost
        // TODO add your handling code here:
    }//GEN-LAST:event_jTFPrimeiraPaginaFocusLost

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        Converter.cancelar = true;
    }//GEN-LAST:event_jBCancelarActionPerformed

    private void jPBProgressoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jPBProgressoStateChanged
        if (!this.isVisible() && jPBProgresso.getValue() == jPBProgresso.getMaximum()) {
            System.exit(0);
        }
    }//GEN-LAST:event_jPBProgressoStateChanged

    private void jCBdoOCRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBdoOCRActionPerformed

    }//GEN-LAST:event_jCBdoOCRActionPerformed

    private void jCBAssinarDigitalmenteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCBAssinarDigitalmenteActionPerformed
        assinarDigitalmente = ((JCheckBox) evt.getSource()).isSelected();
    }//GEN-LAST:event_jCBAssinarDigitalmenteActionPerformed

    private void jLDuvidasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLDuvidasMouseClicked
        Duvidas duvidas = new Duvidas();
        duvidas.setVisible(true);
    }//GEN-LAST:event_jLDuvidasMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Otimizar.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Otimizar.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Otimizar.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Otimizar.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Otimizar().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAbrirDocumentoPDFEntrada;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBConverter;
    private javax.swing.JButton jBLocalArmazenamentoArquivoSaida;
    private javax.swing.JCheckBox jCBAssinarDigitalmente;
    private javax.swing.JComboBox jCBCompactacao;
    private javax.swing.JComboBox jCBFinalidade;
    private javax.swing.JCheckBox jCBdoOCR;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLAjudaCompactacao;
    private javax.swing.JLabel jLAjudaConversao;
    private javax.swing.JLabel jLDuvidas;
    private javax.swing.JLabel jLEInforme;
    private javax.swing.JLabel jLNivelCompactacao;
    private javax.swing.JLabel jLOpcoesFinalidade;
    private javax.swing.JLabel jLOpcoesFinalidade1;
    private javax.swing.JLabel jLOpcoesFinalidade2;
    private javax.swing.JLabel jLOpcoesNivel;
    private javax.swing.JLabel jLSaidaInforme;
    private javax.swing.JLabel jLStatus;
    private javax.swing.JLabel jLSuperior;
    private javax.swing.JLabel jLTamanhoArquivo;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JProgressBar jPBProgresso;
    private javax.swing.JPanel jPEntrada;
    private javax.swing.JPanel jPOpcoes;
    private javax.swing.JPanel jPSaida;
    private javax.swing.JSlider jSNivelCompactacao;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTFEntradaPath;
    private javax.swing.JTextField jTFPrimeiraPagina;
    private javax.swing.JTextField jTFSaidaPath;
    private javax.swing.JTextField jTFTamanhoArquivo1;
    private javax.swing.JTextField jTFUltimaPagina;
    private javax.swing.JLabel jTempoEstimado;
    // End of variables declaration//GEN-END:variables

    public void setNiveisCompactacao(int resolucaoAdequada) {
        NiveisCompactacao.MINIMA = String.valueOf(resolucaoAdequada);
        NiveisCompactacao.RAZOAVEL = String.valueOf((int) (resolucaoAdequada * 0.9));
        NiveisCompactacao.BOA = String.valueOf((int) (resolucaoAdequada * 0.8));
        NiveisCompactacao.EXTREMA = String.valueOf((int) (resolucaoAdequada * 0.6));
        jSNivelCompactacao.setMinimum((int) (resolucaoAdequada * 0.5));
        jSNivelCompactacao.setMaximum((int) (resolucaoAdequada));
        jLAjudaCompactacao.setToolTipText(String.format(textoTooltipNivelCompactacao, NiveisCompactacao.EXTREMA, NiveisCompactacao.BOA, NiveisCompactacao.RAZOAVEL, NiveisCompactacao.MINIMA));
        optionPane.showMessageDialog(null, String.format("Este arquivo encontra-se com a resolução de:  %s dpi", resolucaoAdequada), "Atenção!", JOptionPane.INFORMATION_MESSAGE);
    }

    public void iniciarSilent(String entrada, String saida, String compactacao, String finalidade, Boolean silent, String sufixo, String tamanho) {
        jTFEntradaPath.setText(entrada);
        jTFTamanhoArquivo1.setText(tamanho);
        if (entrada.equals(saida)) {
            jTFSaidaPath.setText(entrada.substring(0, entrada.length() - 4) + "-otimizado.pdf");
        } else {
            jTFSaidaPath.setText(saida);
        }
        jCBCompactacao.setSelectedItem(compactacao);
        jCBFinalidade.setSelectedItem(finalidade);
        this.setVisible(!silent);
        this.numberOfPages = Utils.getPageCount(jTFEntradaPath.getText());
        jTFUltimaPagina.setText(String.valueOf(numberOfPages));
        jTFPrimeiraPagina.setEditable(true);
        jTFUltimaPagina.setEditable(true);

        setPreferencias();

        if (!sufixo.isEmpty()) {
            this.sufixo = "_" + sufixo;
        }
        if (silent) {
            jBConverterActionPerformed(null);
        }

    }

    private void setPreferencias() {

        if (Preferences.isTamanhoDefinido()) {
            jCBFinalidade.setSelectedItem("Outros");
            jTFTamanhoArquivo1.setText(String.valueOf(Preferences.getSizeArquivo()));
        }
        if (Preferences.isPDF1B()) {
            jCBCompactacao.setSelectedItem("Personalizada");
            jSNivelCompactacao.setValue(300);
            jCBFinalidade.setSelectedItem("Não Dividir");
            jCBdoOCR.setSelected(true);
        }
    }

}
