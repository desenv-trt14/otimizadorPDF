/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.jus.trt14.gui;

import br.jus.trt14.converter.Converter;
import br.jus.trt14.converter.NiveisCompactacao;
import br.jus.trt14.events.DragableTextField;
import br.jus.trt14.tools.Archive;
import br.jus.trt14.tools.Utils;
import com.itextpdf.text.pdf.PdfDictionary;
import com.itextpdf.text.pdf.PdfName;
import com.itextpdf.text.pdf.PdfNumber;
import com.itextpdf.text.pdf.PdfReader;
import com.itextpdf.text.pdf.PdfStamper;
import java.awt.Color;
import java.awt.FileDialog;
import java.awt.Graphics2D;
import java.awt.geom.AffineTransform;
import java.awt.image.AffineTransformOp;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.FileOutputStream;
import java.security.Security;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Set;
import java.util.SortedSet;
import java.util.TreeSet;
import java.util.concurrent.Callable;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JProgressBar;
import javax.swing.JRadioButton;
import javax.swing.JTextField;
import javax.swing.ToolTipManager;
import javax.swing.filechooser.FileFilter;
import javax.swing.filechooser.FileNameExtensionFilter;
import org.bouncycastle.jce.provider.BouncyCastleProvider;
import sun.security.mscapi.SunMSCAPI;

/**
 *
 * @author dfs15
 */
public class ExtrairRangePaginas extends FrameBasico {

    private static boolean cancelar;

    private int pageCount;
    private int currentPage;
    private String extractImagePage;
    private HashMap<Integer, Integer> rotacao = new HashMap<Integer, Integer>();
    private String currentFile;
    private boolean multiplosN;

    /**
     * Creates new form RotacionarPagina
     */
    public ExtrairRangePaginas() {
        ToolTipManager.sharedInstance().setDismissDelay(10000);
        initComponents();
        this.position();
        final JTextField field = jTFEntradaPath;
        final ExtrairRangePaginas r = this;
        DragableTextField dragableTextField = new DragableTextField(field, true, new Callable<Void>() {
            @Override
            public Void call() throws Exception {
                r.carregarArquivo();
                return null;
            }
        });

        jTFEntradaPath.setDropTarget(dragableTextField);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jBConverter = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLSuperior1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jBAbrirDocumentoPDFEntrada = new javax.swing.JButton();
        jTQuantidadePaginas = new javax.swing.JTextField();
        jLEInforme = new javax.swing.JLabel();
        jTFEntradaPath = new javax.swing.JTextField();
        jLEInforme2 = new javax.swing.JLabel();
        jPanelOperacao = new javax.swing.JPanel();
        jTPrimeiraPagina = new javax.swing.JTextField();
        jLEInforme3 = new javax.swing.JLabel();
        jTMultiplosDeN1 = new javax.swing.JTextField();
        jRRangePaginas = new javax.swing.JRadioButton();
        jTMultiplosDeNDividir = new javax.swing.JTextField();
        jRPaginasASeremExtraidas = new javax.swing.JRadioButton();
        jRCadaNPaginas = new javax.swing.JRadioButton();
        jTRangeInput1 = new javax.swing.JTextField();
        jBExtrairPaginas = new javax.swing.JButton();
        jPSaida = new javax.swing.JPanel();
        jTFSaidaPath = new javax.swing.JTextField();
        jLSaidaInforme = new javax.swing.JLabel();
        jBLocalArmazenamentoArquivoSaida = new javax.swing.JButton();
        jPBProgresso = new javax.swing.JProgressBar();
        jBCancelar = new javax.swing.JButton();

        jBConverter.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/doc_convert.png"))); // NOI18N
        jBConverter.setText("Converter");
        jBConverter.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBConverterActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        setTitle("JT - Extrair páginas de documento");

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("Otimizador");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("PDF");

        jLSuperior1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/trt14_logo_small.png"))); // NOI18N
        jLSuperior1.setAlignmentX(0.5F);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Arquivo"));

        jBAbrirDocumentoPDFEntrada.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/gnome_folder_open_16.png"))); // NOI18N
        jBAbrirDocumentoPDFEntrada.setText("Abrir");
        jBAbrirDocumentoPDFEntrada.setMaximumSize(new java.awt.Dimension(100, 25));
        jBAbrirDocumentoPDFEntrada.setMinimumSize(new java.awt.Dimension(100, 25));
        jBAbrirDocumentoPDFEntrada.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAbrirDocumentoPDFEntradaActionPerformed(evt);
            }
        });

        jTQuantidadePaginas.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTQuantidadePaginas.setToolTipText("Número da página");
        jTQuantidadePaginas.setEnabled(false);
        jTQuantidadePaginas.setPreferredSize(new java.awt.Dimension(13, 18));
        jTQuantidadePaginas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTQuantidadePaginasActionPerformed(evt);
            }
        });

        jLEInforme.setText("Informe o arquivo que você deseja processar.");

        jTFEntradaPath.setEditable(false);
        jTFEntradaPath.setToolTipText("Você pode arrastar e soltar um PDF aqui");

        jLEInforme2.setText("Total de páginas do documento:");

        jPanelOperacao.setBorder(javax.swing.BorderFactory.createTitledBorder("Operação"));

        jTPrimeiraPagina.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTPrimeiraPagina.setToolTipText("<html>\nA primeira página que será usada como múltiplo de N<br>\n<b>Pode assumir o valor 0</b>\n</html>");
        jTPrimeiraPagina.setEnabled(false);
        jTPrimeiraPagina.setPreferredSize(new java.awt.Dimension(13, 18));
        jTPrimeiraPagina.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTPrimeiraPaginaActionPerformed(evt);
            }
        });
        jTPrimeiraPagina.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTPrimeiraPaginaKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTPrimeiraPaginaKeyReleased(evt);
            }
        });

        jLEInforme3.setText("A partir da página ");

        jTMultiplosDeN1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTMultiplosDeN1.setToolTipText("<html>\nPor exemplo: <br>\n<b>2</b> gerará: <b>2,4,6,8,10,12...</b><br>\n<b>3</b> gerará: <b>3,6,9,12...</b><br>\n</html>");
        jTMultiplosDeN1.setEnabled(false);
        jTMultiplosDeN1.setPreferredSize(new java.awt.Dimension(13, 18));
        jTMultiplosDeN1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTMultiplosDeN1ActionPerformed(evt);
            }
        });
        jTMultiplosDeN1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTMultiplosDeN1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTMultiplosDeN1KeyReleased(evt);
            }
        });

        buttonGroup1.add(jRRangePaginas);
        jRRangePaginas.setText("Páginas múltiplas de N ");
        jRRangePaginas.setToolTipText("<html>Essa função extrairá um único arquivo com as páginas indicadas<br>\nPor exemplo: um arquivo com 10 páginas <br>\nSe você configurar páginas multiplas de 2 começando pela página 1 o programa gerará um arquivo<br>\ncom as seguintes páginas : 1,3,5,7,9\n\n\n</html>");
        jRRangePaginas.setEnabled(false);
        jRRangePaginas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRRangePaginasActionPerformed(evt);
            }
        });

        jTMultiplosDeNDividir.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTMultiplosDeNDividir.setToolTipText("<html>\nPor exemplo: <br>\nSe um arquivo com 18 páginas for dividido a cada 10 páginas o resultado será 2 arquivos, um de 1 até 10 e o outro de 11 até a página 18\n</html>");
        jTMultiplosDeNDividir.setEnabled(false);
        jTMultiplosDeNDividir.setPreferredSize(new java.awt.Dimension(13, 18));
        jTMultiplosDeNDividir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTMultiplosDeNDividirActionPerformed(evt);
            }
        });
        jTMultiplosDeNDividir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTMultiplosDeNDividirKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTMultiplosDeNDividirKeyReleased(evt);
            }
        });

        buttonGroup1.add(jRPaginasASeremExtraidas);
        jRPaginasASeremExtraidas.setText("Páginas a serem extraídas - ex.: 1-3;5-6;8");
        jRPaginasASeremExtraidas.setToolTipText("Essa função extrairá um único arquivo com as páginas indicadas");
        jRPaginasASeremExtraidas.setEnabled(false);
        jRPaginasASeremExtraidas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRPaginasASeremExtraidasActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRCadaNPaginas);
        jRCadaNPaginas.setText("Dividir a cada N páginas");
        jRCadaNPaginas.setToolTipText("<html>Essa função extrairá <b>múltiplos arquivos</b> com as páginas indicadas</html>");
        jRCadaNPaginas.setEnabled(false);
        jRCadaNPaginas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRCadaNPaginasActionPerformed(evt);
            }
        });

        jTRangeInput1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jTRangeInput1.setToolTipText("<html> ex.: 1-3;5-6;8 gerará as páginas 1,2,3,5,6,8  <br> O caractere \"-\" significa intervalo, exemplo: 8-12 significa 8,9,10,11,12 <br> O caractere \";\" significa lista, exemplo:  8;9;10;11;12 é igual a 8-12</html>");
        jTRangeInput1.setEnabled(false);
        jTRangeInput1.setPreferredSize(new java.awt.Dimension(13, 18));
        jTRangeInput1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTRangeInput1ActionPerformed(evt);
            }
        });
        jTRangeInput1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTRangeInput1KeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTRangeInput1KeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanelOperacaoLayout = new javax.swing.GroupLayout(jPanelOperacao);
        jPanelOperacao.setLayout(jPanelOperacaoLayout);
        jPanelOperacaoLayout.setHorizontalGroup(
            jPanelOperacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOperacaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelOperacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelOperacaoLayout.createSequentialGroup()
                        .addComponent(jRPaginasASeremExtraidas)
                        .addGap(18, 18, 18)
                        .addComponent(jTRangeInput1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanelOperacaoLayout.createSequentialGroup()
                        .addGroup(jPanelOperacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(jPanelOperacaoLayout.createSequentialGroup()
                                .addComponent(jRRangePaginas)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jTMultiplosDeN1, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanelOperacaoLayout.createSequentialGroup()
                                .addComponent(jRCadaNPaginas)
                                .addGap(18, 18, 18)
                                .addComponent(jTMultiplosDeNDividir, javax.swing.GroupLayout.PREFERRED_SIZE, 221, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLEInforme3)
                        .addGap(18, 18, 18)
                        .addComponent(jTPrimeiraPagina, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanelOperacaoLayout.setVerticalGroup(
            jPanelOperacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelOperacaoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelOperacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTPrimeiraPagina, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLEInforme3)
                    .addComponent(jTMultiplosDeN1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRRangePaginas))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                .addGroup(jPanelOperacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTMultiplosDeNDividir, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRCadaNPaginas))
                .addGap(18, 18, 18)
                .addGroup(jPanelOperacaoLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTRangeInput1, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRPaginasASeremExtraidas))
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLEInforme2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTQuantidadePaginas, javax.swing.GroupLayout.PREFERRED_SIZE, 225, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanelOperacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLEInforme)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jTFEntradaPath)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                        .addComponent(jBAbrirDocumentoPDFEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLEInforme)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jBAbrirDocumentoPDFEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTFEntradaPath, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLEInforme2)
                    .addComponent(jTQuantidadePaginas, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jPanelOperacao, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        jBExtrairPaginas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/doc_convert.png"))); // NOI18N
        jBExtrairPaginas.setText("Extrair");
        jBExtrairPaginas.setEnabled(false);
        jBExtrairPaginas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExtrairPaginasActionPerformed(evt);
            }
        });

        jPSaida.setBorder(javax.swing.BorderFactory.createTitledBorder("Saída"));

        jTFSaidaPath.setEditable(false);
        jTFSaidaPath.setPreferredSize(new java.awt.Dimension(6, 22));

        jLSaidaInforme.setText("Informe o local onde deseja salvar o(s) arquivo(s) convertido(s).");

        jBLocalArmazenamentoArquivoSaida.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/gnome_folder_open_16.png"))); // NOI18N
        jBLocalArmazenamentoArquivoSaida.setText("Abrir");
        jBLocalArmazenamentoArquivoSaida.setMaximumSize(new java.awt.Dimension(100, 25));
        jBLocalArmazenamentoArquivoSaida.setMinimumSize(new java.awt.Dimension(100, 25));
        jBLocalArmazenamentoArquivoSaida.setPreferredSize(new java.awt.Dimension(100, 25));
        jBLocalArmazenamentoArquivoSaida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBLocalArmazenamentoArquivoSaidaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPSaidaLayout = new javax.swing.GroupLayout(jPSaida);
        jPSaida.setLayout(jPSaidaLayout);
        jPSaidaLayout.setHorizontalGroup(
            jPSaidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPSaidaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPSaidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPSaidaLayout.createSequentialGroup()
                        .addComponent(jLSaidaInforme, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGap(26, 26, 26))
                    .addGroup(jPSaidaLayout.createSequentialGroup()
                        .addComponent(jTFSaidaPath, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addComponent(jBLocalArmazenamentoArquivoSaida, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPSaidaLayout.setVerticalGroup(
            jPSaidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPSaidaLayout.createSequentialGroup()
                .addComponent(jLSaidaInforme)
                .addGap(7, 7, 7)
                .addGroup(jPSaidaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTFSaidaPath, javax.swing.GroupLayout.DEFAULT_SIZE, 29, Short.MAX_VALUE)
                    .addComponent(jBLocalArmazenamentoArquivoSaida, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPBProgresso.setStringPainted(true);
        jPBProgresso.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jPBProgressoStateChanged(evt);
            }
        });

        jBCancelar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/button_cancel.png"))); // NOI18N
        jBCancelar.setText("Cancelar");
        jBCancelar.setEnabled(false);
        jBCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLSuperior1, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel5)
                        .addGap(6, 6, 6)
                        .addComponent(jLabel4))
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPSaida, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jPBProgresso, javax.swing.GroupLayout.PREFERRED_SIZE, 461, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBExtrairPaginas, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLSuperior1, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(55, 55, 55)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))))
                .addGap(21, 21, 21)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jPSaida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBExtrairPaginas, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPBProgresso, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBAbrirDocumentoPDFEntradaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAbrirDocumentoPDFEntradaActionPerformed
        JFileChooser fc = new JFileChooser();
        FileFilter ff = new FileNameExtensionFilter("PDF (Portable Document Format)", "pdf");
        fc.setFileFilter(ff);
        fc.setAcceptAllFileFilterUsed(false);
        int opt = fc.showSaveDialog(this);
        File f = fc.getSelectedFile();
        if (opt == 0) {
            jTFEntradaPath.setText(f.getPath().replace(".pdf", "") + ".pdf");
            carregarArquivo();
        }
    }//GEN-LAST:event_jBAbrirDocumentoPDFEntradaActionPerformed

    private void carregarArquivo() {
        jTQuantidadePaginas.setText(String.valueOf(Utils.getPageCount(jTFEntradaPath.getText())));
        if (!jTQuantidadePaginas.getText().equals("0")) {
            jRRangePaginas.setEnabled(true);
            jRCadaNPaginas.setEnabled(true);
            jRPaginasASeremExtraidas.setEnabled(true);
        } else {
            jTRangeInput1.setEnabled(false);
            jBExtrairPaginas.setEnabled(false);

            jRRangePaginas.setEnabled(false);
            jRCadaNPaginas.setEnabled(false);
            jRPaginasASeremExtraidas.setEnabled(false);
        }
    }

    private void jTQuantidadePaginasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTQuantidadePaginasActionPerformed

    }//GEN-LAST:event_jTQuantidadePaginasActionPerformed

    private void jBConverterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBConverterActionPerformed

    }//GEN-LAST:event_jBConverterActionPerformed

    private void jBExtrairPaginasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExtrairPaginasActionPerformed
        jBExtrairPaginas.setEnabled(false);
        try {
            final JButton cancelar = jBCancelar;
            final JButton extrair = jBExtrairPaginas;

            int quantidadePaginas = Integer.parseInt(jTQuantidadePaginas.getText());

            if (jRPaginasASeremExtraidas.isSelected() || jRRangePaginas.isSelected()) {
                String[] ranges = jTRangeInput1.getText().split(";");

                final SortedSet<Integer> paginas = new TreeSet<Integer>();

                if (jRPaginasASeremExtraidas.isSelected()) {
                    for (String range : ranges) {
                        if (range.contains("-")) {
                            int primeiraPagina = Integer.valueOf(range.split("-")[0]);
                            int ultimaPagina = Integer.valueOf(range.split("-")[1]);
                            for (int i = primeiraPagina; i <= ultimaPagina; i++) {
                                paginas.add(i);
                            }
                        } else {
                            int primeiraPagina = Integer.valueOf(range);
                            paginas.add(primeiraPagina);
                        }
                    }
                } else if (jRRangePaginas.isSelected()) {

                    int multiplosDeN = Integer.parseInt(jTMultiplosDeN1.getText());
                    int primeiraPagina = Integer.parseInt(jTPrimeiraPagina.getText());
                    int paginaAtual = primeiraPagina;

                    if (primeiraPagina > 0) {
                        paginas.add(paginaAtual);
                    }

                    while (true) {
                        paginaAtual += multiplosDeN;
                        if (paginaAtual <= quantidadePaginas) {
                            paginas.add(paginaAtual);
                        } else {
                            break;
                        }
                    }

                }
                final JFrame pai = this;
                final String saida = jTFEntradaPath.getText();
                new Thread() {

                    public void run() {

                        try {
                            jPBProgresso.setMinimum(0);
                            jPBProgresso.setMaximum(paginas.size());
                            cancelar.setEnabled(true);

                            List<String> arquivos = new ArrayList<>();
                            int firstPage = 0;
                            for (Integer pagina : paginas) {
                                if (ExtrairRangePaginas.cancelar) {
                                    ExtrairRangePaginas.cancelar = false;
                                    cancelar.setEnabled(false);
                                    break;
                                }
                                System.out.println(pagina);
                                arquivos.add(Utils.extractPage(saida, pagina, pagina, NiveisCompactacao.MINIMA).getName());
                                firstPage++;
                                jPBProgresso.setValue(firstPage);
                            }

                            Utils.juntarArquivos(arquivos, jTFSaidaPath.getText());

                            JOptionPane.showMessageDialog(pai, "Extração concluída com sucesso", "Atenção!", JOptionPane.INFORMATION_MESSAGE);
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        extrair.setEnabled(true);

                    }

                }.start();
            } else {
                int primeiraPagina = 1;
                int multiplosDeN = Integer.parseInt(jTMultiplosDeNDividir.getText());
                int ultimaPagina = multiplosDeN;
                final List<Integer[]> lista = new ArrayList<Integer[]>();

                if (ultimaPagina > quantidadePaginas) {
                    ultimaPagina = quantidadePaginas;
                }
                lista.add(new Integer[]{primeiraPagina, ultimaPagina});
                while (true) {
                    primeiraPagina += multiplosDeN;
                    ultimaPagina += multiplosDeN;

                    boolean breakLaco = false;

                    if (ultimaPagina > quantidadePaginas) {
                        ultimaPagina = quantidadePaginas;
                        breakLaco = true;
                    }

                    lista.add(new Integer[]{primeiraPagina, ultimaPagina});

                    if (breakLaco) {
                        break;
                    }

                }

                final JFrame pai = this;
                final String saida = jTFEntradaPath.getText();
                new Thread() {

                    public void run() {

                        try {
                            jPBProgresso.setMinimum(0);
                            jPBProgresso.setMaximum(lista.size());

                            cancelar.setEnabled(true);

                            int progress = 0;
                            for (Integer[] range : lista) {
                                if (ExtrairRangePaginas.cancelar) {
                                    ExtrairRangePaginas.cancelar = false;
                                    cancelar.setEnabled(false);
                                    break;
                                }
                                List<String> arquivos = new ArrayList<>();
                                arquivos.add(Utils.extractPage(saida, range[0], range[1], NiveisCompactacao.MINIMA).getName());
                                progress++;
                                jPBProgresso.setValue(progress);

                                String saida = jTFSaidaPath.getText().substring(0, jTFSaidaPath.getText().lastIndexOf(".")) + progress + ".pdf";

                                Utils.juntarArquivos(arquivos, saida);
                            }

                            JOptionPane.showMessageDialog(pai, "Extração concluída com sucesso", "Atenção!", JOptionPane.INFORMATION_MESSAGE);
                        } catch (Exception e) {
                            e.printStackTrace();
                        }
                        extrair.setEnabled(true);
                    }

                }.start();

            }

        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_jBExtrairPaginasActionPerformed

    private void jBLocalArmazenamentoArquivoSaidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBLocalArmazenamentoArquivoSaidaActionPerformed
        JFileChooser fc = new JFileChooser();
        FileFilter ff = new FileNameExtensionFilter("PDF (Portable Document Format)", "pdf");
        fc.setFileFilter(ff);
        fc.setAcceptAllFileFilterUsed(false);
        int opt = fc.showSaveDialog(this);
        File f = fc.getSelectedFile();
        if (opt == 0) {
            jTFSaidaPath.setText(f.getPath().replace(".pdf", "") + ".pdf");
            boolean validaRange = validaRange(jTRangeInput1.getText(), Integer.valueOf(jTQuantidadePaginas.getText()));

            boolean multiplosDeN = jRRangePaginas.isSelected() && multiplosN;

            if (jTFEntradaPath.getText().length() > 0 && !jTQuantidadePaginas.getText().equals("0") && (validaRange || multiplosDeN || jRCadaNPaginas.isSelected())) {
                jBExtrairPaginas.setEnabled(true);
            }
        }
    }//GEN-LAST:event_jBLocalArmazenamentoArquivoSaidaActionPerformed

    private void jTRangeInput1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTRangeInput1ActionPerformed
        setRange();
    }//GEN-LAST:event_jTRangeInput1ActionPerformed

    private void jTRangeInput1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTRangeInput1KeyPressed
        setRange();
    }//GEN-LAST:event_jTRangeInput1KeyPressed

    private void jTRangeInput1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTRangeInput1KeyReleased
        setRange();
    }//GEN-LAST:event_jTRangeInput1KeyReleased

    private void setRange() {
        try {
            boolean validaRange = validaRange(jTRangeInput1.getText(), Integer.valueOf(jTQuantidadePaginas.getText()));
            if (!validaRange) {
                jTRangeInput1.setBackground(Color.RED);
                jBExtrairPaginas.setEnabled(false);
            } else {
                jTRangeInput1.setBackground(Color.WHITE);
                if (jTFSaidaPath.getText().length() > 0) {
                    jBExtrairPaginas.setEnabled(true);
                }
            }
        } catch (Exception ex) {
            Logger.getLogger(ExtrairRangePaginas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void jTPrimeiraPaginaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTPrimeiraPaginaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTPrimeiraPaginaActionPerformed

    private void jTPrimeiraPaginaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTPrimeiraPaginaKeyPressed
        setMultiplosN();
    }//GEN-LAST:event_jTPrimeiraPaginaKeyPressed

    private void jTPrimeiraPaginaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTPrimeiraPaginaKeyReleased
        setMultiplosN();
    }//GEN-LAST:event_jTPrimeiraPaginaKeyReleased

    private void setMultiplosN() {
        try {
            int parseInt = Integer.parseInt(jTPrimeiraPagina.getText());
            int quantidadePaginas = Integer.parseInt(jTQuantidadePaginas.getText());
            jTPrimeiraPagina.setBackground(Color.WHITE);
            multiplosN = true;
            if (parseInt > quantidadePaginas) {
                JOptionPane.showMessageDialog(null, "Número maior que quantidade de páginas", "Atenção!", JOptionPane.ERROR);
                throw new Exception();
            }
            if (parseInt < 0) {
                JOptionPane.showMessageDialog(null, "Número não pode ser negativo", "Atenção!", JOptionPane.ERROR);
                throw new Exception();
            }
        } catch (Exception ex) {
            multiplosN = false;
            jTPrimeiraPagina.setBackground(Color.RED);
            Logger.getLogger(ExtrairRangePaginas.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void jTMultiplosDeN1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTMultiplosDeN1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTMultiplosDeN1ActionPerformed

    private void jTMultiplosDeN1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTMultiplosDeN1KeyPressed
        setMultiplosN();
    }//GEN-LAST:event_jTMultiplosDeN1KeyPressed

    private void jTMultiplosDeN1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTMultiplosDeN1KeyReleased
        setMultiplosN();
    }//GEN-LAST:event_jTMultiplosDeN1KeyReleased

    private void jPBProgressoStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jPBProgressoStateChanged
        if (!this.isVisible() && jPBProgresso.getValue() == jPBProgresso.getMaximum()) {
            System.exit(0);
        }
    }//GEN-LAST:event_jPBProgressoStateChanged

    private void jTMultiplosDeNDividirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTMultiplosDeNDividirActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTMultiplosDeNDividirActionPerformed

    private void jTMultiplosDeNDividirKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTMultiplosDeNDividirKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTMultiplosDeNDividirKeyPressed

    private void jTMultiplosDeNDividirKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTMultiplosDeNDividirKeyReleased
        // TODO add your handling code here:
    }//GEN-LAST:event_jTMultiplosDeNDividirKeyReleased

    private void jRRangePaginasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRRangePaginasActionPerformed
        disableAllTextsInputs();
        JRadioButton source = (JRadioButton) evt.getSource();
        if (source.isSelected()) {
            jTMultiplosDeN1.setEnabled(true);
            jTPrimeiraPagina.setEnabled(true);
        }
    }//GEN-LAST:event_jRRangePaginasActionPerformed

    private void jRCadaNPaginasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRCadaNPaginasActionPerformed
        disableAllTextsInputs();
        JRadioButton source = (JRadioButton) evt.getSource();
        if (source.isSelected()) {
            jTMultiplosDeNDividir.setEnabled(true);
        }
    }//GEN-LAST:event_jRCadaNPaginasActionPerformed

    private void jRPaginasASeremExtraidasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRPaginasASeremExtraidasActionPerformed
        disableAllTextsInputs();
        JRadioButton source = (JRadioButton) evt.getSource();
        if (source.isSelected()) {
            jTRangeInput1.setEnabled(true);
        }
    }//GEN-LAST:event_jRPaginasASeremExtraidasActionPerformed

    private void jBCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBCancelarActionPerformed
        ExtrairRangePaginas.cancelar = true;
    }//GEN-LAST:event_jBCancelarActionPerformed

    private void disableAllTextsInputs() {
        jTMultiplosDeN1.setEnabled(false);
        jTPrimeiraPagina.setEnabled(false);
        jTMultiplosDeNDividir.setEnabled(false);
        jTRangeInput1.setEnabled(false);
    }

    public static boolean validaRange(String rangeInput, int numeroPaginas) {
        if (rangeInput.length() == 0) {
            return false;
        }
        try {
            String[] ranges = rangeInput.split(";");

            for (String range : ranges) {
                if (range.length() > 0) {

                    if (range.contains("-") && range.split("-")[1].length() > 0) {
                        int primeiraPagina = Integer.valueOf(range.split("-")[0]);
                        int ultimaPagina = Integer.valueOf(range.split("-")[1]);
                        if (primeiraPagina > ultimaPagina || ultimaPagina > numeroPaginas || primeiraPagina > numeroPaginas) {
                            return false;
                        }

                    } else {
                        int primeiraPagina = Integer.valueOf(range);
                        if (primeiraPagina > numeroPaginas) {
                            return false;
                        }

                    }
                }
            }
            return true;

        } catch (Exception e) {
            e.printStackTrace();
            return false;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            BouncyCastleProvider providerBC = new BouncyCastleProvider();
            Security.addProvider(providerBC);
            SunMSCAPI providerMSCAPI = new SunMSCAPI();
            Security.addProvider(providerMSCAPI);
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExtrairRangePaginas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jBAbrirDocumentoPDFEntrada;
    private javax.swing.JButton jBCancelar;
    private javax.swing.JButton jBConverter;
    private javax.swing.JButton jBExtrairPaginas;
    private javax.swing.JButton jBLocalArmazenamentoArquivoSaida;
    private javax.swing.JLabel jLEInforme;
    private javax.swing.JLabel jLEInforme2;
    private javax.swing.JLabel jLEInforme3;
    private javax.swing.JLabel jLSaidaInforme;
    private javax.swing.JLabel jLSuperior1;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JProgressBar jPBProgresso;
    private javax.swing.JPanel jPSaida;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanelOperacao;
    private javax.swing.JRadioButton jRCadaNPaginas;
    private javax.swing.JRadioButton jRPaginasASeremExtraidas;
    private javax.swing.JRadioButton jRRangePaginas;
    private javax.swing.JTextField jTFEntradaPath;
    private javax.swing.JTextField jTFSaidaPath;
    private javax.swing.JTextField jTMultiplosDeN1;
    private javax.swing.JTextField jTMultiplosDeNDividir;
    private javax.swing.JTextField jTPrimeiraPagina;
    private javax.swing.JTextField jTQuantidadePaginas;
    private javax.swing.JTextField jTRangeInput1;
    // End of variables declaration//GEN-END:variables
}
