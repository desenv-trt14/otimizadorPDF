/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.jus.trt14.gui;

import br.jus.trt14.constant.Constant;
import br.jus.trt14.gui.dialogs.AvisoFuncionalidadeEnviarPara;
import br.jus.trt14.gui.dialogs.Configuracao;
import br.jus.trt14.gui.dialogs.Duvidas;
import br.jus.trt14.gui.dialogs.Sobre;
import br.jus.trt14.gui.dialogs.TelaOCR;
import br.jus.trt14.tools.Preferences;
import br.jus.trt14.tools.Utils;
import java.awt.Font;
import java.awt.font.TextAttribute;
import java.io.IOException;
import java.security.Security;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpUriRequest;
import org.apache.http.client.methods.RequestBuilder;
import org.apache.http.entity.ContentType;
import org.apache.http.entity.mime.HttpMultipartMode;
import org.apache.http.entity.mime.MultipartEntityBuilder;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.util.EntityUtils;
import org.bouncycastle.jce.provider.BouncyCastleProvider;
import sun.security.mscapi.SunMSCAPI;

/**
 *
 * @author 
 */
public class Principal extends FrameBasico {

    private Font sobreOriginal;

    private static boolean mostrarMensagemInicio = true;

    /**
     * Creates new form TelaEntrada
     */
    public Principal() {
        super();
        initComponents();
        this.position();
        if (mostrarMensagemInicio) {
            JOptionPane.showMessageDialog(null, "Caro usuário, a qualidade dos arquivos gerados por este programa é de sua responsabilidade.", "Atenção!", JOptionPane.INFORMATION_MESSAGE);
            mostrarMensagemInicio = false;
        }
        if (Preferences.isMostrarAvisoMenuContexto()) {
            AvisoFuncionalidadeEnviarPara af = new AvisoFuncionalidadeEnviarPara();
            af.setModal(true);
            af.setResizable(false);
            af.setVisible(true);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLSobre1 = new javax.swing.JLabel();
        jLSuperior = new javax.swing.JLabel();
        jPEntrada = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jBOtimizar = new javax.swing.JButton();
        jBJuntar = new javax.swing.JButton();
        jBOtimizar1 = new javax.swing.JButton();
        jBAssinar = new javax.swing.JButton();
        jBVerificar = new javax.swing.JButton();
        jBGirar = new javax.swing.JButton();
        jBExtrairRangePaginas = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLSobre = new javax.swing.JLabel();
        jLOpcoes = new javax.swing.JLabel();
        jLDuvidas = new javax.swing.JLabel();

        jLSobre1.setBackground(new java.awt.Color(202, 202, 202));
        jLSobre1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLSobre1.setForeground(new java.awt.Color(0, 51, 255));
        jLSobre1.setText("Sobre o Otimizador PDF");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("JT - Otimizador PDF");
        setResizable(false);

        jLSuperior.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/trt14_logo_small.png"))); // NOI18N
        jLSuperior.setAlignmentX(0.5F);

        jPEntrada.setBorder(javax.swing.BorderFactory.createTitledBorder("Opções"));

        jLabel2.setText("O que deseja fazer?");

        jBOtimizar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/doc_convert.png"))); // NOI18N
        jBOtimizar.setText("Otimizar PDF em Lote");
        jBOtimizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBOtimizarActionPerformed(evt);
            }
        });

        jBJuntar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/doc_convert.png"))); // NOI18N
        jBJuntar.setText("Juntar documentos");
        jBJuntar.setToolTipText("Junta múltiplos documentos (PDF, PNG, JPG, JPEG, DOC, DOCX) em uma saída PDF/A");
        jBJuntar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBJuntarActionPerformed(evt);
            }
        });

        jBOtimizar1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/doc_convert.png"))); // NOI18N
        jBOtimizar1.setText("Otimizar PDF");
        jBOtimizar1.setToolTipText("Tenta reduzir os PDFs e convertê-los para PDF/A. Aceita também outros formatos de arquivos como PNG, JPG, JPEG, DOCX, DOC");
        jBOtimizar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBOtimizar1ActionPerformed(evt);
            }
        });

        jBAssinar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/doc_convert.png"))); // NOI18N
        jBAssinar.setText("Assinar documentos");
        jBAssinar.setToolTipText("Assina documentos de forma digital, dentro da rede do TRT 14 também gera um código de validação que permite a impressão do documento e posterior validação.");
        jBAssinar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAssinarActionPerformed(evt);
            }
        });

        jBVerificar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/doc_convert.png"))); // NOI18N
        jBVerificar.setText("Validar documento assinado");
        jBVerificar.setToolTipText("Valida a assinatura digital documentos, mostrando os signatários com seus respectivos CPFs");
        jBVerificar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBVerificarActionPerformed(evt);
            }
        });

        jBGirar.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/doc_convert.png"))); // NOI18N
        jBGirar.setText("Girar páginas");
        jBGirar.setToolTipText("Permite rotacionar as páginas (individual ou coletivamente) em ângulos de 90º");
        jBGirar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGirarActionPerformed(evt);
            }
        });

        jBExtrairRangePaginas.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/doc_convert.png"))); // NOI18N
        jBExtrairRangePaginas.setText("Extrair grupo de páginas");
        jBExtrairRangePaginas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBExtrairRangePaginasActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPEntradaLayout = new javax.swing.GroupLayout(jPEntrada);
        jPEntrada.setLayout(jPEntradaLayout);
        jPEntradaLayout.setHorizontalGroup(
            jPEntradaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPEntradaLayout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPEntradaLayout.createSequentialGroup()
                .addContainerGap(66, Short.MAX_VALUE)
                .addGroup(jPEntradaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jBExtrairRangePaginas, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBGirar, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBVerificar, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBAssinar, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBOtimizar1, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBJuntar, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jBOtimizar, javax.swing.GroupLayout.PREFERRED_SIZE, 242, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(47, 47, 47))
        );
        jPEntradaLayout.setVerticalGroup(
            jPEntradaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPEntradaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(23, 23, 23)
                .addComponent(jBOtimizar1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBJuntar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBOtimizar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBAssinar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBVerificar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBGirar, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jBExtrairRangePaginas, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 102, 102));
        jLabel5.setText("Otimizador");

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 0, 0));
        jLabel4.setText("PDF");

        jLSobre.setBackground(new java.awt.Color(202, 202, 202));
        jLSobre.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLSobre.setForeground(new java.awt.Color(0, 51, 255));
        jLSobre.setText("Sobre o Otimizador PDF");
        jLSobre.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLSobreMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLSobreMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLSobreMouseExited(evt);
            }
        });

        jLOpcoes.setBackground(new java.awt.Color(202, 202, 202));
        jLOpcoes.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLOpcoes.setForeground(new java.awt.Color(0, 51, 255));
        jLOpcoes.setText("Configuração");
        jLOpcoes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLOpcoesMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLOpcoesMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLOpcoesMouseExited(evt);
            }
        });

        jLDuvidas.setBackground(new java.awt.Color(202, 202, 202));
        jLDuvidas.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        jLDuvidas.setForeground(new java.awt.Color(0, 51, 255));
        jLDuvidas.setText("Dúvidas?");
        jLDuvidas.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLDuvidasMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jLDuvidasMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                jLDuvidasMouseExited(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLSuperior, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel4)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLSobre, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addComponent(jLDuvidas)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jLOpcoes))))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jPEntrada, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLSuperior, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(7, 7, 7)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLOpcoes)
                            .addComponent(jLDuvidas))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLSobre)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))))
                .addGap(18, 18, 18)
                .addComponent(jPEntrada, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBOtimizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBOtimizarActionPerformed
        OtimizarLote otimizarlote = new OtimizarLote();
        otimizarlote.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jBOtimizarActionPerformed

    private void jBJuntarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBJuntarActionPerformed
        Juntar juntar = new Juntar();
        juntar.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jBJuntarActionPerformed

    private void jLSobreMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLSobreMouseClicked
        Sobre s = new Sobre();
        s.setModal(true);
        s.setResizable(false);
        s.setVisible(true);
    }//GEN-LAST:event_jLSobreMouseClicked

    private void jLSobreMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLSobreMouseEntered
        sobreOriginal = evt.getComponent().getFont();
        Map attributes = sobreOriginal.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        evt.getComponent().setFont(sobreOriginal.deriveFont(attributes));
    }//GEN-LAST:event_jLSobreMouseEntered

    private void jLSobreMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLSobreMouseExited

        evt.getComponent().setFont(sobreOriginal);
    }//GEN-LAST:event_jLSobreMouseExited

    private void jBOtimizar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBOtimizar1ActionPerformed
        Otimizar otimizar = new Otimizar();
        otimizar.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jBOtimizar1ActionPerformed

    private void jBAssinarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAssinarActionPerformed
        AssinarLote assinar = new AssinarLote();
        assinar.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jBAssinarActionPerformed

    private void jBVerificarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBVerificarActionPerformed
        Validar validar = new Validar();
        validar.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jBVerificarActionPerformed

    private void jBGirarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGirarActionPerformed
        RotacionarPagina girar = new RotacionarPagina();
        girar.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jBGirarActionPerformed

    private void jLOpcoesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLOpcoesMouseClicked
        Configuracao configuracao = new Configuracao();
        configuracao.iniciarDialog();
    }//GEN-LAST:event_jLOpcoesMouseClicked

    private void jLOpcoesMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLOpcoesMouseEntered
        sobreOriginal = evt.getComponent().getFont();
        Map attributes = sobreOriginal.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        evt.getComponent().setFont(sobreOriginal.deriveFont(attributes));
    }//GEN-LAST:event_jLOpcoesMouseEntered

    private void jLOpcoesMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLOpcoesMouseExited
        evt.getComponent().setFont(sobreOriginal);
    }//GEN-LAST:event_jLOpcoesMouseExited

    private void jBExtrairRangePaginasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBExtrairRangePaginasActionPerformed
        ExtrairRangePaginas juntar = new ExtrairRangePaginas();
        juntar.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jBExtrairRangePaginasActionPerformed

    private void jLDuvidasMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLDuvidasMouseClicked
        Duvidas duvidas = new Duvidas();
    }//GEN-LAST:event_jLDuvidasMouseClicked

    private void jLDuvidasMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLDuvidasMouseEntered
         sobreOriginal = evt.getComponent().getFont();
        Map attributes = sobreOriginal.getAttributes();
        attributes.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
        evt.getComponent().setFont(sobreOriginal.deriveFont(attributes));
    }//GEN-LAST:event_jLDuvidasMouseEntered

    private void jLDuvidasMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLDuvidasMouseExited
        evt.getComponent().setFont(sobreOriginal);
    }//GEN-LAST:event_jLDuvidasMouseExited

    /**
     * @param args the command line arguments
     */
    private static String URL_BASE = Preferences.getPreferences(Constant.URL_BASE_ASSINADOR_PREF, "");

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            BouncyCastleProvider providerBC = new BouncyCastleProvider();
            Security.addProvider(providerBC);
            SunMSCAPI providerMSCAPI = new SunMSCAPI();
            Security.addProvider(providerMSCAPI);
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        String myDir = Constant.MY_DIR;
        Utils.mkdir(myDir);
        String tipo = "";
        String entrada = "";
        String saida = "";
        String finalidade = "";
        String compactacao = "";
        String tamanho = "";
        List<String> listaArquivos = new ArrayList<String>();
        Boolean isSilent = false;
        String sufixo = "";

//        for (String arg : args) {
//           argsP += arg +" ";
//        }
//        JOptionPane.showMessageDialog(null, argsP);
        for (int i = 0; i < args.length; i++) {
            System.out.println("Parametro " + i + " " + args[i]);
        }
        if (args.length == 2) {
            if (args[0].toLowerCase().endsWith(".ps")) {
                try {
                    FrameBasico.MODO_IMPRESSAO = true;
                    myDir += Utils.trataOctal(args[1]) + ".pdf";
                    Utils.juntarArquivos(Arrays.asList(new String[]{args[0]}), myDir);
                    Utils.deleteFile(args[0]);
                    args = new String[7];
                    args[0] = "-o";
                    args[1] = "-nofileoutput";
                    args[2] = "Mínima";
                    args[3] = "PJE";
                    args[4] = "-nosilent";
                    args[5] = "-nosfx";
                    args[6] = myDir;
                } catch (Exception e) {
                    JOptionPane.showConfirmDialog(null, e.getMessage());
                }
            } else if (args[0].toLowerCase().endsWith(".png") && args[1].toLowerCase().endsWith(".png")) {
                try {
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, "Inicio OCR");
                    TelaOCR.doHOCRCreation(args[0], args[1], null);
                    Logger.getLogger(Principal.class.getName()).log(Level.SEVERE, null, "Fim OCR");
                    System.exit(0);
                } catch (Exception e) {
                    System.exit(-1);
                    e.printStackTrace();
                }
            }
        }
        for (String arg : args) {
            Pattern p = Pattern.compile("\\.\\w{2,10}$");
            Matcher m = p.matcher(arg);
            if (m.find()) {
                if (!m.group().toLowerCase().equals(".pdf")) {
                    JOptionPane.showMessageDialog(null, "Arquivo selecionado inválido!\nSomente arquivos PDFs podem ser utilizados como entrada!", "Otimizador PDF - Erro", JOptionPane.ERROR_MESSAGE);
                    System.exit(-1);
                }
            }
        }

        if (args.length > 0) {
            mostrarMensagemInicio = false;
            tipo = args[0];
            switch (tipo) {
                case "-o":
                    if (args.length > 4) {
                        if (args.length > 7 && args[7].toLowerCase().endsWith(".pdf")) { //Faz Otimização em LOTE se tiver mais de um arquivo selecionado
                            OtimizarLote otimizarLote = new OtimizarLote();
                            getArquivos(6, args, listaArquivos);
                            otimizarLote.iniciarArgumentos(listaArquivos);
                        } else { //Faz Otimização normal se apenas um arquivo for selecionado
                            saida = args[1].equals("-nofileoutput") ? args[6] : args[1];
                            compactacao = args[2];
                            finalidade = args[3];
                            isSilent = args[4].equals("-silent");
                            sufixo = args[5].equals("-nosfx") ? "" : args[5];
                            entrada = args[6];
                            tamanho = args.length == 7 ? "10" : args[7];
                            Otimizar otimizar = new Otimizar();
                            otimizar.iniciarSilent(entrada, saida, compactacao, finalidade, isSilent, sufixo, tamanho);
                        }
                    } else {
                        if (!isSilent) {
                            JOptionPane.showMessageDialog(null, "Quantidade de argumentos inválidos", "Otimizador PDF - Erro", JOptionPane.ERROR_MESSAGE);
                        }
                        System.exit(-1);
                    }
                    break;
                case "-j":
                    if (args.length >= 3) {
                        Juntar juntar = new Juntar();
                        saida = args[1];
                        getArquivos(1, args, listaArquivos);
                        juntar.iniciarArgumentos(saida, listaArquivos);

                    } else {
                        JOptionPane.showMessageDialog(null, "É necessário selecionar mais de um arquivo!", "Otimizador PDF - Erro", JOptionPane.ERROR_MESSAGE);
                        System.exit(-1);
                    }
                    break;
                case "-ol":
                    if (args.length >= 3) {
                        OtimizarLote otimizarLote = new OtimizarLote();
                        getArquivos(1, args, listaArquivos);
                        otimizarLote.iniciarArgumentos(listaArquivos);
                    } else {
                        JOptionPane.showMessageDialog(null, "Quantidade de argumentos inválidos", "Otimizador PDF - Erro", JOptionPane.ERROR_MESSAGE);
                        System.exit(-1);
                    }
                    break;
                case "-a":
                    if (args.length >= 2) {
                        AssinarLote assinarLote = new AssinarLote();
                        getArquivos(1, args, listaArquivos);
                        assinarLote.iniciarArgumentos(listaArquivos);
                    } else {
                        JOptionPane.showMessageDialog(null, "Quantidade de argumentos inválidos", "Otimizador PDF - Erro", JOptionPane.ERROR_MESSAGE);
                        System.exit(-1);
                    }
                    break;
                case "-v":
                    if (args.length >= 2) {
                        Validar assinarLote = new Validar();
                        getArquivos(1, args, listaArquivos);
                        assinarLote.iniciarArgumentos(listaArquivos);
                    } else {
                        JOptionPane.showMessageDialog(null, "Quantidade de argumentos inválidos", "Otimizador PDF - Erro", JOptionPane.ERROR_MESSAGE);
                        System.exit(-1);
                    }
                    break;
                default:
                    JOptionPane.showMessageDialog(null, "Argumentos inválidos", "Otimizador PDF - Erro", JOptionPane.ERROR_MESSAGE);
                    System.exit(-1);
            }
        } else {
            System.out.println("Sem Argumentos");
            /* Create and display the form */
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new Principal().setVisible(true);
                }
            });
        }

        //listaArquivos.add(file.getAbsolutePath()); 
        //Saida //Compactação //Finalidade //não mostra caixa de acompanhamento //tem sufixo //texto sufixo //Entrada
        //-o "C:\testeConvertido.pdf" "Mínima" "PJE" -silent -nosfx "C:\teste.pdf" 
        //Saida            //Arquivos...
        //-j "C:\juntado.pdf" "C:\teste.pdf" "C:\teste.pdf" "C:\teste.pdf" ...
        //Arquivos...
        //-ol "C:\teste.pdf" "C:\teste.pdf" "C:\teste.pdf" ...
    }

    public static void getArquivos(int inicio, String[] args, List<String> listaArquivos) {
        for (int i = inicio; i < args.length; i++) {
            listaArquivos.add(args[i]);
        }
        Collections.sort(listaArquivos);
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAssinar;
    private javax.swing.JButton jBExtrairRangePaginas;
    private javax.swing.JButton jBGirar;
    private javax.swing.JButton jBJuntar;
    private javax.swing.JButton jBOtimizar;
    private javax.swing.JButton jBOtimizar1;
    private javax.swing.JButton jBVerificar;
    private javax.swing.JLabel jLDuvidas;
    private javax.swing.JLabel jLOpcoes;
    private javax.swing.JLabel jLSobre;
    private javax.swing.JLabel jLSobre1;
    private javax.swing.JLabel jLSuperior;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPEntrada;
    // End of variables declaration//GEN-END:variables
}
